{
    "swagger": "2.0",
    "info": {
        "description": "This is a Mo2 server.",
        "title": "Mo2",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:5001",
    "basePath": "/",
    "paths": {
        "/api/accounts": {
            "put": {
                "description": "通过id获取已有用户，验证身份。并将name的修改与setting的修改应用",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "修改名称（唯一用于登录）/偏好设置",
                "parameters": [
                    {
                        "description": "id必须，可修改name/settings",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserInfoBrief"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "description": "add by json account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Add an account",
                "parameters": [
                    {
                        "description": "add new account info",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AddAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete by path",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "delete Blog",
                "parameters": [
                    {
                        "description": "delete account info",
                        "name": "info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DeleteAccount"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/accounts/detail/{id}": {
            "get": {
                "description": "get string by ID；若id为空，返回所有用户信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Show account's info",
                "operationId": "get-string-by-int",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/accounts/listBrief": {
            "get": {
                "description": "from a list of user ids [usage]:/api/accounts/listBrief?id=60223d4042d6febff9f276f0\u0026id=60236866d2a68483adaccc38",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "List accounts brief info",
                "parameters": [
                    {
                        "type": "array",
                        "description": "user IDs list",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserInfoBrief"
                            }
                        }
                    }
                }
            }
        },
        "/api/accounts/login": {
            "post": {
                "description": "login by json model.LoginAccount and set cookies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "login an account",
                "parameters": [
                    {
                        "description": "login account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/accounts/logout": {
            "post": {
                "description": "logout and delete cookies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "logout",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/accounts/role": {
            "post": {
                "description": "add by json account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Add role for an account",
                "parameters": [
                    {
                        "description": "add new account info",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AddAccountRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/accounts/verify": {
            "get": {
                "description": "add by json account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "verify an account's email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email@mo2.com",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "xxxx==sf",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "308": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/admin/indexblogs": {
            "post": {
                "description": "none",
                "tags": [
                    "admin"
                ],
                "summary": "index all blogs",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/blogs/category": {
            "get": {
                "description": "若id为空，返回所有categories(debug mode)；若id不为空，返回该id的category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "find categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "string ObjectID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Directory"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "add by json",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "upsert category",
                "parameters": [
                    {
                        "description": "Add category",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Directory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Directory"
                        }
                    }
                }
            }
        },
        "/api/blogs/find/id": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blogs"
                ],
                "summary": "find Blog by id",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "bool true",
                        "name": "draft",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "string xxxxxxxx",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Blog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/blogs/find/own": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blogs"
                ],
                "summary": "find Blog",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "bool true",
                        "name": "draft",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "bool default false",
                        "name": "deleted",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "int 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "int 5",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Blog"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Blog"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/blogs/find/userId": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blogs"
                ],
                "summary": "find Blog by userid",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "bool true",
                        "name": "draft",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "bool default false",
                        "name": "deleted",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "string xxxxxxxx",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "int 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "int 5",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Blog"
                            }
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/blogs/publish": {
            "post": {
                "description": "add by json",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blogs"
                ],
                "summary": "Publish Blog",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "bool true",
                        "name": "draft",
                        "in": "query"
                    },
                    {
                        "description": "Add blog",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Blog"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Blog"
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/blogs/query": {
            "get": {
                "description": "find",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blogs"
                ],
                "summary": "find all Blogs",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "bool default false",
                        "name": "draft",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "bool default false",
                        "name": "deleted",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "int 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "int 5",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "aaaa",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Blog"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Blog"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/blogs/{id}": {
            "delete": {
                "description": "delete by id path(draft/blog)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blogs"
                ],
                "summary": "彻底删除blog",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "bool true",
                        "name": "draft",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "string xxxxxxxx",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "204": {
                        "description": ""
                    },
                    "304": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/blogs/{operation}/{id}": {
            "put": {
                "description": "restore by path",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blogs"
                ],
                "summary": "restore Blog",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "bool true",
                        "name": "draft",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "recycle/restore",
                        "name": "operation",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Blog id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/comment": {
            "post": {
                "description": "upsert json comments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "upsert comments",
                "parameters": [
                    {
                        "description": "comment",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/comment/{id}": {
            "get": {
                "description": "get json comments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "get comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "article id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "int 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "int 5",
                        "name": "pagesize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Comment"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "description": "upsert json comments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "upsert subcomments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "subcomment",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Subcomment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Subcomment"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/commentcount/{id}": {
            "get": {
                "description": "get article comment num",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "count comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "article id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/directories/category": {
            "delete": {
                "description": "根据id删除，并解除与之相关实体的所有关联",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "delete category",
                "parameters": [
                    {
                        "description": "category id to delete",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Directory"
                        }
                    }
                }
            }
        },
        "/api/directories/{collection}": {
            "get": {
                "description": "from a list of directory ids [usage]:/api/directories/{collection}?id=60223d4042d6febff9f276f0\u0026id=60236866d2a68483adaccc38",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "directory"
                ],
                "summary": "List directories brief info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category/...",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "description": "directory IDs list",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Directory"
                            }
                        }
                    }
                }
            }
        },
        "/api/file": {
            "post": {
                "description": "say something",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "simple test",
                "parameters": [
                    {
                        "description": "file",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Blog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/img/{filename}": {
            "get": {
                "description": "add by json",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "img"
                ],
                "summary": "Gen img token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file name",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ImgUploadToken"
                        }
                    }
                }
            }
        },
        "/api/logs": {
            "get": {
                "description": "get by check cookies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "get user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserInfo"
                        }
                    }
                }
            }
        },
        "/api/notification": {
            "get": {
                "description": "get notifications",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "get notifications",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "int 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "int 5",
                        "name": "pagesize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/notification/num": {
            "get": {
                "description": "get notification num",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "get notification num",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/relation/blogs/{type}/{ID}": {
            "get": {
                "description": "根据type返回不同结果：[category] 所有category包含的blog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relation"
                ],
                "summary": "find blogs by given type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "find by category",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Blog"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/relation/categories/{type}": {
            "post": {
                "description": "（根据path中提供的关联类型选择对应方法）目前有：父category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relation"
                ],
                "summary": "将列表内的子categories关联到单个实体上",
                "parameters": [
                    {
                        "type": "string",
                        "description": "types to relate",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "sub category id and parent id",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RelateEntitySet2Entity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Directory"
                        }
                    }
                }
            }
        },
        "/api/relation/category/{type}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relation"
                ],
                "summary": "relate category to given type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "relatedTo user/blog/category/userMain",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "category id to be related",
                        "name": "e2e",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RelateEntity2Entity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RelateEntity2Entity"
                        }
                    }
                }
            }
        },
        "/api/relation/category/{type}/{ID}": {
            "get": {
                "description": "根据type返回不同结果：[user] 个人的所有category|[sub] 所有子category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relation"
                ],
                "summary": "find categories by given type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "find by user/sub",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Directory"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/badresponse.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "badresponse.ResponseError": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "dto.ImgUploadToken": {
            "type": "object",
            "properties": {
                "file_key": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.RelateEntity2Entity": {
            "type": "object",
            "properties": {
                "relateTo_id": {
                    "type": "string"
                },
                "related_id": {
                    "type": "string"
                }
            }
        },
        "dto.RelateEntitySet2Entity": {
            "type": "object",
            "properties": {
                "relateTo_id": {
                    "type": "string"
                },
                "related_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.UserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email@qq.com"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxxxxxxx=="
                },
                "name": {
                    "type": "string",
                    "example": "account name"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "ordinaryUser"
                    ]
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "'avatar'": " 'www.avatar.com/account_name'",
                        "'site'": "'www.limfx.com'(public data)"
                    }
                }
            }
        },
        "dto.UserInfoBrief": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email@qq.com"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxxxxxxx=="
                },
                "name": {
                    "type": "string",
                    "example": "account name"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "'avatar'": " 'www.avatar.com/account_name'",
                        "'site'": "'www.limfx.com'(public data)"
                    }
                }
            }
        },
        "model.AddAccount": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email@mo2.com"
                },
                "password": {
                    "type": "string",
                    "example": "p@ssword"
                },
                "userName": {
                    "type": "string",
                    "example": "account name"
                }
            }
        },
        "model.AddAccountRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "xxxxxxxxxxxxx=="
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "super_key": {
                    "type": "string",
                    "example": "special"
                }
            }
        },
        "model.Blog": {
            "type": "object",
            "properties": {
                "authorId": {
                    "type": "string",
                    "example": "xxxxxxxxxxxxx=="
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "content": {
                    "type": "string",
                    "example": "xxxx\nxxxx"
                },
                "cover": {
                    "type": "string",
                    "example": "https://xxx/xxx"
                },
                "description": {
                    "type": "string",
                    "example": "mouse ❤ monkey"
                },
                "entityInfo": {
                    "$ref": "#/definitions/model.Entity"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxxxxxxx=="
                },
                "keyWords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "xxx",
                        "xxx"
                    ]
                },
                "title": {
                    "type": "string",
                    "example": "mouse ❤ monkey"
                }
            }
        },
        "model.Comment": {
            "type": "object",
            "properties": {
                "article": {
                    "type": "string"
                },
                "aurhor": {
                    "type": "string"
                },
                "content": {
                    "type": "string",
                    "example": "a comment"
                },
                "entity_info": {
                    "$ref": "#/definitions/model.Entity"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxxxxxxxx=="
                },
                "praise": {
                    "$ref": "#/definitions/model.Praiseable"
                },
                "subs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Subcomment"
                    }
                }
            }
        },
        "model.DeleteAccount": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email@mo2.com"
                },
                "password": {
                    "type": "string",
                    "example": "p@ssword"
                }
            }
        },
        "model.Directory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "xxxxxxxxxxxxxx=="
                },
                "info": {
                    "$ref": "#/definitions/model.DirectoryInfo"
                },
                "name": {
                    "type": "string",
                    "example": "records"
                },
                "owner_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parent_id": {
                    "type": "string",
                    "example": "xxxxxxxxxxxxxx=="
                }
            }
        },
        "model.DirectoryInfo": {
            "type": "object",
            "properties": {
                "cover": {
                    "type": "string",
                    "example": "https://www.motwo.cn/cover"
                },
                "description": {
                    "type": "string",
                    "example": "course materials"
                }
            }
        },
        "model.Entity": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string",
                    "example": "2020-10-1"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "updateTime": {
                    "type": "string",
                    "example": "2020-10-1"
                }
            }
        },
        "model.LoginAccount": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "p@ssword"
                },
                "userNameOrEmail": {
                    "type": "string",
                    "example": "account name/email@mo2.com"
                }
            }
        },
        "model.Praiseable": {
            "type": "object",
            "properties": {
                "down": {
                    "type": "integer"
                },
                "up": {
                    "type": "integer"
                },
                "weighted": {
                    "type": "integer"
                }
            }
        },
        "model.Subcomment": {
            "type": "object",
            "properties": {
                "aurhor": {
                    "type": "string"
                },
                "content": {
                    "type": "string",
                    "example": "a comment"
                },
                "entity_info": {
                    "$ref": "#/definitions/model.Entity"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxxxxxxxx=="
                },
                "praise": {
                    "$ref": "#/definitions/model.Praiseable"
                }
            }
        }
    }
}